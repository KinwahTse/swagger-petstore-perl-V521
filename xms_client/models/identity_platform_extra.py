# coding: utf-8

"""
    XMS API

    XMS is the controller of distributed storage system  # noqa: E501

    OpenAPI spec version: XSCALEROS_5.2.100.4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401
import six

# from xms_client.models.identity_platform_extra_user_keys import IdentityPlatformExtraUserKeys  # noqa: F401,E501


class IdentityPlatformExtra(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'callback_url': 'str',
        'client_id': 'str',
        'client_secret': 'str',
        'insecure_skip_verify': 'bool',
        'logout_redirect_url': 'str',
        'logout_url': 'str',
        'user_keys': 'IdentityPlatformExtraUserKeys',
        'userinfo_url': 'str',
        'verified_url': 'str'
    }

    attribute_map = {
        'callback_url': 'callback_url',
        'client_id': 'client_id',
        'client_secret': 'client_secret',
        'insecure_skip_verify': 'insecure_skip_verify',
        'logout_redirect_url': 'logout_redirect_url',
        'logout_url': 'logout_url',
        'user_keys': 'user_keys',
        'userinfo_url': 'userinfo_url',
        'verified_url': 'verified_url'
    }

    def __init__(self, callback_url=None, client_id=None, client_secret=None, insecure_skip_verify=None, logout_redirect_url=None, logout_url=None, user_keys=None, userinfo_url=None, verified_url=None):  # noqa: E501
        """IdentityPlatformExtra - a model defined in Swagger"""  # noqa: E501

        self._callback_url = None
        self._client_id = None
        self._client_secret = None
        self._insecure_skip_verify = None
        self._logout_redirect_url = None
        self._logout_url = None
        self._user_keys = None
        self._userinfo_url = None
        self._verified_url = None
        self.discriminator = None

        if callback_url is not None:
            self.callback_url = callback_url
        if client_id is not None:
            self.client_id = client_id
        if client_secret is not None:
            self.client_secret = client_secret
        if insecure_skip_verify is not None:
            self.insecure_skip_verify = insecure_skip_verify
        if logout_redirect_url is not None:
            self.logout_redirect_url = logout_redirect_url
        if logout_url is not None:
            self.logout_url = logout_url
        if user_keys is not None:
            self.user_keys = user_keys
        if userinfo_url is not None:
            self.userinfo_url = userinfo_url
        if verified_url is not None:
            self.verified_url = verified_url

    @property
    def callback_url(self):
        """Gets the callback_url of this IdentityPlatformExtra.  # noqa: E501


        :return: The callback_url of this IdentityPlatformExtra.  # noqa: E501
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this IdentityPlatformExtra.


        :param callback_url: The callback_url of this IdentityPlatformExtra.  # noqa: E501
        :type: str
        """

        self._callback_url = callback_url

    @property
    def client_id(self):
        """Gets the client_id of this IdentityPlatformExtra.  # noqa: E501


        :return: The client_id of this IdentityPlatformExtra.  # noqa: E501
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this IdentityPlatformExtra.


        :param client_id: The client_id of this IdentityPlatformExtra.  # noqa: E501
        :type: str
        """

        self._client_id = client_id

    @property
    def client_secret(self):
        """Gets the client_secret of this IdentityPlatformExtra.  # noqa: E501


        :return: The client_secret of this IdentityPlatformExtra.  # noqa: E501
        :rtype: str
        """
        return self._client_secret

    @client_secret.setter
    def client_secret(self, client_secret):
        """Sets the client_secret of this IdentityPlatformExtra.


        :param client_secret: The client_secret of this IdentityPlatformExtra.  # noqa: E501
        :type: str
        """

        self._client_secret = client_secret

    @property
    def insecure_skip_verify(self):
        """Gets the insecure_skip_verify of this IdentityPlatformExtra.  # noqa: E501


        :return: The insecure_skip_verify of this IdentityPlatformExtra.  # noqa: E501
        :rtype: bool
        """
        return self._insecure_skip_verify

    @insecure_skip_verify.setter
    def insecure_skip_verify(self, insecure_skip_verify):
        """Sets the insecure_skip_verify of this IdentityPlatformExtra.


        :param insecure_skip_verify: The insecure_skip_verify of this IdentityPlatformExtra.  # noqa: E501
        :type: bool
        """

        self._insecure_skip_verify = insecure_skip_verify

    @property
    def logout_redirect_url(self):
        """Gets the logout_redirect_url of this IdentityPlatformExtra.  # noqa: E501


        :return: The logout_redirect_url of this IdentityPlatformExtra.  # noqa: E501
        :rtype: str
        """
        return self._logout_redirect_url

    @logout_redirect_url.setter
    def logout_redirect_url(self, logout_redirect_url):
        """Sets the logout_redirect_url of this IdentityPlatformExtra.


        :param logout_redirect_url: The logout_redirect_url of this IdentityPlatformExtra.  # noqa: E501
        :type: str
        """

        self._logout_redirect_url = logout_redirect_url

    @property
    def logout_url(self):
        """Gets the logout_url of this IdentityPlatformExtra.  # noqa: E501


        :return: The logout_url of this IdentityPlatformExtra.  # noqa: E501
        :rtype: str
        """
        return self._logout_url

    @logout_url.setter
    def logout_url(self, logout_url):
        """Sets the logout_url of this IdentityPlatformExtra.


        :param logout_url: The logout_url of this IdentityPlatformExtra.  # noqa: E501
        :type: str
        """

        self._logout_url = logout_url

    @property
    def user_keys(self):
        """Gets the user_keys of this IdentityPlatformExtra.  # noqa: E501


        :return: The user_keys of this IdentityPlatformExtra.  # noqa: E501
        :rtype: IdentityPlatformExtraUserKeys
        """
        return self._user_keys

    @user_keys.setter
    def user_keys(self, user_keys):
        """Sets the user_keys of this IdentityPlatformExtra.


        :param user_keys: The user_keys of this IdentityPlatformExtra.  # noqa: E501
        :type: IdentityPlatformExtraUserKeys
        """

        self._user_keys = user_keys

    @property
    def userinfo_url(self):
        """Gets the userinfo_url of this IdentityPlatformExtra.  # noqa: E501


        :return: The userinfo_url of this IdentityPlatformExtra.  # noqa: E501
        :rtype: str
        """
        return self._userinfo_url

    @userinfo_url.setter
    def userinfo_url(self, userinfo_url):
        """Sets the userinfo_url of this IdentityPlatformExtra.


        :param userinfo_url: The userinfo_url of this IdentityPlatformExtra.  # noqa: E501
        :type: str
        """

        self._userinfo_url = userinfo_url

    @property
    def verified_url(self):
        """Gets the verified_url of this IdentityPlatformExtra.  # noqa: E501


        :return: The verified_url of this IdentityPlatformExtra.  # noqa: E501
        :rtype: str
        """
        return self._verified_url

    @verified_url.setter
    def verified_url(self, verified_url):
        """Sets the verified_url of this IdentityPlatformExtra.


        :param verified_url: The verified_url of this IdentityPlatformExtra.  # noqa: E501
        :type: str
        """

        self._verified_url = verified_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IdentityPlatformExtra):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
