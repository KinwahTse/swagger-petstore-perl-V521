# coding: utf-8

"""
    XMS API

    XMS is the controller of distributed storage system  # noqa: E501

    OpenAPI spec version: XSCALEROS_5.2.100.4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401
import six


class DfsGatewayStat(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cpu_util': 'float',
        'create': 'datetime',
        'mem_usage_percent': 'float',
        'meta_delete_latency_us': 'float',
        'meta_delete_ops': 'float',
        'meta_list_latency_us': 'float',
        'meta_list_ops': 'float',
        'meta_read_latency_us': 'float',
        'meta_read_ops': 'float',
        'meta_trunc_latency_us': 'float',
        'meta_trunc_ops': 'float',
        'meta_write_latency_us': 'float',
        'meta_write_ops': 'float',
        'read_bandwidth_kbyte': 'float',
        'read_iops': 'float',
        'read_latency_us': 'float',
        'write_bandwidth_kbyte': 'float',
        'write_iops': 'float',
        'write_latency_us': 'float'
    }

    attribute_map = {
        'cpu_util': 'cpu_util',
        'create': 'create',
        'mem_usage_percent': 'mem_usage_percent',
        'meta_delete_latency_us': 'meta_delete_latency_us',
        'meta_delete_ops': 'meta_delete_ops',
        'meta_list_latency_us': 'meta_list_latency_us',
        'meta_list_ops': 'meta_list_ops',
        'meta_read_latency_us': 'meta_read_latency_us',
        'meta_read_ops': 'meta_read_ops',
        'meta_trunc_latency_us': 'meta_trunc_latency_us',
        'meta_trunc_ops': 'meta_trunc_ops',
        'meta_write_latency_us': 'meta_write_latency_us',
        'meta_write_ops': 'meta_write_ops',
        'read_bandwidth_kbyte': 'read_bandwidth_kbyte',
        'read_iops': 'read_iops',
        'read_latency_us': 'read_latency_us',
        'write_bandwidth_kbyte': 'write_bandwidth_kbyte',
        'write_iops': 'write_iops',
        'write_latency_us': 'write_latency_us'
    }

    def __init__(self, cpu_util=None, create=None, mem_usage_percent=None, meta_delete_latency_us=None, meta_delete_ops=None, meta_list_latency_us=None, meta_list_ops=None, meta_read_latency_us=None, meta_read_ops=None, meta_trunc_latency_us=None, meta_trunc_ops=None, meta_write_latency_us=None, meta_write_ops=None, read_bandwidth_kbyte=None, read_iops=None, read_latency_us=None, write_bandwidth_kbyte=None, write_iops=None, write_latency_us=None):  # noqa: E501
        """DfsGatewayStat - a model defined in Swagger"""  # noqa: E501

        self._cpu_util = None
        self._create = None
        self._mem_usage_percent = None
        self._meta_delete_latency_us = None
        self._meta_delete_ops = None
        self._meta_list_latency_us = None
        self._meta_list_ops = None
        self._meta_read_latency_us = None
        self._meta_read_ops = None
        self._meta_trunc_latency_us = None
        self._meta_trunc_ops = None
        self._meta_write_latency_us = None
        self._meta_write_ops = None
        self._read_bandwidth_kbyte = None
        self._read_iops = None
        self._read_latency_us = None
        self._write_bandwidth_kbyte = None
        self._write_iops = None
        self._write_latency_us = None
        self.discriminator = None

        if cpu_util is not None:
            self.cpu_util = cpu_util
        if create is not None:
            self.create = create
        if mem_usage_percent is not None:
            self.mem_usage_percent = mem_usage_percent
        if meta_delete_latency_us is not None:
            self.meta_delete_latency_us = meta_delete_latency_us
        if meta_delete_ops is not None:
            self.meta_delete_ops = meta_delete_ops
        if meta_list_latency_us is not None:
            self.meta_list_latency_us = meta_list_latency_us
        if meta_list_ops is not None:
            self.meta_list_ops = meta_list_ops
        if meta_read_latency_us is not None:
            self.meta_read_latency_us = meta_read_latency_us
        if meta_read_ops is not None:
            self.meta_read_ops = meta_read_ops
        if meta_trunc_latency_us is not None:
            self.meta_trunc_latency_us = meta_trunc_latency_us
        if meta_trunc_ops is not None:
            self.meta_trunc_ops = meta_trunc_ops
        if meta_write_latency_us is not None:
            self.meta_write_latency_us = meta_write_latency_us
        if meta_write_ops is not None:
            self.meta_write_ops = meta_write_ops
        if read_bandwidth_kbyte is not None:
            self.read_bandwidth_kbyte = read_bandwidth_kbyte
        if read_iops is not None:
            self.read_iops = read_iops
        if read_latency_us is not None:
            self.read_latency_us = read_latency_us
        if write_bandwidth_kbyte is not None:
            self.write_bandwidth_kbyte = write_bandwidth_kbyte
        if write_iops is not None:
            self.write_iops = write_iops
        if write_latency_us is not None:
            self.write_latency_us = write_latency_us

    @property
    def cpu_util(self):
        """Gets the cpu_util of this DfsGatewayStat.  # noqa: E501


        :return: The cpu_util of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._cpu_util

    @cpu_util.setter
    def cpu_util(self, cpu_util):
        """Sets the cpu_util of this DfsGatewayStat.


        :param cpu_util: The cpu_util of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._cpu_util = cpu_util

    @property
    def create(self):
        """Gets the create of this DfsGatewayStat.  # noqa: E501


        :return: The create of this DfsGatewayStat.  # noqa: E501
        :rtype: datetime
        """
        return self._create

    @create.setter
    def create(self, create):
        """Sets the create of this DfsGatewayStat.


        :param create: The create of this DfsGatewayStat.  # noqa: E501
        :type: datetime
        """

        self._create = create

    @property
    def mem_usage_percent(self):
        """Gets the mem_usage_percent of this DfsGatewayStat.  # noqa: E501


        :return: The mem_usage_percent of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._mem_usage_percent

    @mem_usage_percent.setter
    def mem_usage_percent(self, mem_usage_percent):
        """Sets the mem_usage_percent of this DfsGatewayStat.


        :param mem_usage_percent: The mem_usage_percent of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._mem_usage_percent = mem_usage_percent

    @property
    def meta_delete_latency_us(self):
        """Gets the meta_delete_latency_us of this DfsGatewayStat.  # noqa: E501


        :return: The meta_delete_latency_us of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._meta_delete_latency_us

    @meta_delete_latency_us.setter
    def meta_delete_latency_us(self, meta_delete_latency_us):
        """Sets the meta_delete_latency_us of this DfsGatewayStat.


        :param meta_delete_latency_us: The meta_delete_latency_us of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._meta_delete_latency_us = meta_delete_latency_us

    @property
    def meta_delete_ops(self):
        """Gets the meta_delete_ops of this DfsGatewayStat.  # noqa: E501


        :return: The meta_delete_ops of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._meta_delete_ops

    @meta_delete_ops.setter
    def meta_delete_ops(self, meta_delete_ops):
        """Sets the meta_delete_ops of this DfsGatewayStat.


        :param meta_delete_ops: The meta_delete_ops of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._meta_delete_ops = meta_delete_ops

    @property
    def meta_list_latency_us(self):
        """Gets the meta_list_latency_us of this DfsGatewayStat.  # noqa: E501


        :return: The meta_list_latency_us of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._meta_list_latency_us

    @meta_list_latency_us.setter
    def meta_list_latency_us(self, meta_list_latency_us):
        """Sets the meta_list_latency_us of this DfsGatewayStat.


        :param meta_list_latency_us: The meta_list_latency_us of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._meta_list_latency_us = meta_list_latency_us

    @property
    def meta_list_ops(self):
        """Gets the meta_list_ops of this DfsGatewayStat.  # noqa: E501


        :return: The meta_list_ops of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._meta_list_ops

    @meta_list_ops.setter
    def meta_list_ops(self, meta_list_ops):
        """Sets the meta_list_ops of this DfsGatewayStat.


        :param meta_list_ops: The meta_list_ops of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._meta_list_ops = meta_list_ops

    @property
    def meta_read_latency_us(self):
        """Gets the meta_read_latency_us of this DfsGatewayStat.  # noqa: E501


        :return: The meta_read_latency_us of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._meta_read_latency_us

    @meta_read_latency_us.setter
    def meta_read_latency_us(self, meta_read_latency_us):
        """Sets the meta_read_latency_us of this DfsGatewayStat.


        :param meta_read_latency_us: The meta_read_latency_us of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._meta_read_latency_us = meta_read_latency_us

    @property
    def meta_read_ops(self):
        """Gets the meta_read_ops of this DfsGatewayStat.  # noqa: E501


        :return: The meta_read_ops of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._meta_read_ops

    @meta_read_ops.setter
    def meta_read_ops(self, meta_read_ops):
        """Sets the meta_read_ops of this DfsGatewayStat.


        :param meta_read_ops: The meta_read_ops of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._meta_read_ops = meta_read_ops

    @property
    def meta_trunc_latency_us(self):
        """Gets the meta_trunc_latency_us of this DfsGatewayStat.  # noqa: E501


        :return: The meta_trunc_latency_us of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._meta_trunc_latency_us

    @meta_trunc_latency_us.setter
    def meta_trunc_latency_us(self, meta_trunc_latency_us):
        """Sets the meta_trunc_latency_us of this DfsGatewayStat.


        :param meta_trunc_latency_us: The meta_trunc_latency_us of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._meta_trunc_latency_us = meta_trunc_latency_us

    @property
    def meta_trunc_ops(self):
        """Gets the meta_trunc_ops of this DfsGatewayStat.  # noqa: E501


        :return: The meta_trunc_ops of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._meta_trunc_ops

    @meta_trunc_ops.setter
    def meta_trunc_ops(self, meta_trunc_ops):
        """Sets the meta_trunc_ops of this DfsGatewayStat.


        :param meta_trunc_ops: The meta_trunc_ops of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._meta_trunc_ops = meta_trunc_ops

    @property
    def meta_write_latency_us(self):
        """Gets the meta_write_latency_us of this DfsGatewayStat.  # noqa: E501


        :return: The meta_write_latency_us of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._meta_write_latency_us

    @meta_write_latency_us.setter
    def meta_write_latency_us(self, meta_write_latency_us):
        """Sets the meta_write_latency_us of this DfsGatewayStat.


        :param meta_write_latency_us: The meta_write_latency_us of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._meta_write_latency_us = meta_write_latency_us

    @property
    def meta_write_ops(self):
        """Gets the meta_write_ops of this DfsGatewayStat.  # noqa: E501


        :return: The meta_write_ops of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._meta_write_ops

    @meta_write_ops.setter
    def meta_write_ops(self, meta_write_ops):
        """Sets the meta_write_ops of this DfsGatewayStat.


        :param meta_write_ops: The meta_write_ops of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._meta_write_ops = meta_write_ops

    @property
    def read_bandwidth_kbyte(self):
        """Gets the read_bandwidth_kbyte of this DfsGatewayStat.  # noqa: E501


        :return: The read_bandwidth_kbyte of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._read_bandwidth_kbyte

    @read_bandwidth_kbyte.setter
    def read_bandwidth_kbyte(self, read_bandwidth_kbyte):
        """Sets the read_bandwidth_kbyte of this DfsGatewayStat.


        :param read_bandwidth_kbyte: The read_bandwidth_kbyte of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._read_bandwidth_kbyte = read_bandwidth_kbyte

    @property
    def read_iops(self):
        """Gets the read_iops of this DfsGatewayStat.  # noqa: E501


        :return: The read_iops of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._read_iops

    @read_iops.setter
    def read_iops(self, read_iops):
        """Sets the read_iops of this DfsGatewayStat.


        :param read_iops: The read_iops of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._read_iops = read_iops

    @property
    def read_latency_us(self):
        """Gets the read_latency_us of this DfsGatewayStat.  # noqa: E501


        :return: The read_latency_us of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._read_latency_us

    @read_latency_us.setter
    def read_latency_us(self, read_latency_us):
        """Sets the read_latency_us of this DfsGatewayStat.


        :param read_latency_us: The read_latency_us of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._read_latency_us = read_latency_us

    @property
    def write_bandwidth_kbyte(self):
        """Gets the write_bandwidth_kbyte of this DfsGatewayStat.  # noqa: E501


        :return: The write_bandwidth_kbyte of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._write_bandwidth_kbyte

    @write_bandwidth_kbyte.setter
    def write_bandwidth_kbyte(self, write_bandwidth_kbyte):
        """Sets the write_bandwidth_kbyte of this DfsGatewayStat.


        :param write_bandwidth_kbyte: The write_bandwidth_kbyte of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._write_bandwidth_kbyte = write_bandwidth_kbyte

    @property
    def write_iops(self):
        """Gets the write_iops of this DfsGatewayStat.  # noqa: E501


        :return: The write_iops of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._write_iops

    @write_iops.setter
    def write_iops(self, write_iops):
        """Sets the write_iops of this DfsGatewayStat.


        :param write_iops: The write_iops of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._write_iops = write_iops

    @property
    def write_latency_us(self):
        """Gets the write_latency_us of this DfsGatewayStat.  # noqa: E501


        :return: The write_latency_us of this DfsGatewayStat.  # noqa: E501
        :rtype: float
        """
        return self._write_latency_us

    @write_latency_us.setter
    def write_latency_us(self, write_latency_us):
        """Sets the write_latency_us of this DfsGatewayStat.


        :param write_latency_us: The write_latency_us of this DfsGatewayStat.  # noqa: E501
        :type: float
        """

        self._write_latency_us = write_latency_us

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DfsGatewayStat):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
