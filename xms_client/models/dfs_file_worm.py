# coding: utf-8

"""
    XMS API

    XMS is the controller of distributed storage system  # noqa: E501

    OpenAPI spec version: XSCALEROS_5.2.100.4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401
import six

# from xms_client.models.dfs_worm import DfsWorm  # noqa: F401,E501


class DfsFileWorm(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'auto_lock_time': 'datetime',
        'dfs_worm': 'DfsWorm',
        'expire_time': 'datetime',
        'state': 'str'
    }

    attribute_map = {
        'auto_lock_time': 'auto_lock_time',
        'dfs_worm': 'dfs_worm',
        'expire_time': 'expire_time',
        'state': 'state'
    }

    def __init__(self, auto_lock_time=None, dfs_worm=None, expire_time=None, state=None):  # noqa: E501
        """DfsFileWorm - a model defined in Swagger"""  # noqa: E501

        self._auto_lock_time = None
        self._dfs_worm = None
        self._expire_time = None
        self._state = None
        self.discriminator = None

        if auto_lock_time is not None:
            self.auto_lock_time = auto_lock_time
        if dfs_worm is not None:
            self.dfs_worm = dfs_worm
        if expire_time is not None:
            self.expire_time = expire_time
        if state is not None:
            self.state = state

    @property
    def auto_lock_time(self):
        """Gets the auto_lock_time of this DfsFileWorm.  # noqa: E501

        automatic lock time of file  # noqa: E501

        :return: The auto_lock_time of this DfsFileWorm.  # noqa: E501
        :rtype: datetime
        """
        return self._auto_lock_time

    @auto_lock_time.setter
    def auto_lock_time(self, auto_lock_time):
        """Sets the auto_lock_time of this DfsFileWorm.

        automatic lock time of file  # noqa: E501

        :param auto_lock_time: The auto_lock_time of this DfsFileWorm.  # noqa: E501
        :type: datetime
        """

        self._auto_lock_time = auto_lock_time

    @property
    def dfs_worm(self):
        """Gets the dfs_worm of this DfsFileWorm.  # noqa: E501

        dfs worm resource  # noqa: E501

        :return: The dfs_worm of this DfsFileWorm.  # noqa: E501
        :rtype: DfsWorm
        """
        return self._dfs_worm

    @dfs_worm.setter
    def dfs_worm(self, dfs_worm):
        """Sets the dfs_worm of this DfsFileWorm.

        dfs worm resource  # noqa: E501

        :param dfs_worm: The dfs_worm of this DfsFileWorm.  # noqa: E501
        :type: DfsWorm
        """

        self._dfs_worm = dfs_worm

    @property
    def expire_time(self):
        """Gets the expire_time of this DfsFileWorm.  # noqa: E501

        worm expire time of file  # noqa: E501

        :return: The expire_time of this DfsFileWorm.  # noqa: E501
        :rtype: datetime
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this DfsFileWorm.

        worm expire time of file  # noqa: E501

        :param expire_time: The expire_time of this DfsFileWorm.  # noqa: E501
        :type: datetime
        """

        self._expire_time = expire_time

    @property
    def state(self):
        """Gets the state of this DfsFileWorm.  # noqa: E501

        worm state of file  # noqa: E501

        :return: The state of this DfsFileWorm.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DfsFileWorm.

        worm state of file  # noqa: E501

        :param state: The state of this DfsFileWorm.  # noqa: E501
        :type: str
        """

        self._state = state

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DfsFileWorm):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
