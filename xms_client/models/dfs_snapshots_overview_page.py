# coding: utf-8

"""
    XMS API

    XMS is the controller of distributed storage system  # noqa: E501

    OpenAPI spec version: XSCALEROS_5.2.100.4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401
import six


class DfsSnapshotsOverviewPage(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dp_snapshot_num': 'int',
        'manual_snapshot_num': 'int',
        'path_dp_snapshot_num': 'int',
        'path_manual_num': 'int',
        'path_total_num': 'int',
        'snapshot_total_num': 'int'
    }

    attribute_map = {
        'dp_snapshot_num': 'dp_snapshot_num',
        'manual_snapshot_num': 'manual_snapshot_num',
        'path_dp_snapshot_num': 'path_dp_snapshot_num',
        'path_manual_num': 'path_manual_num',
        'path_total_num': 'path_total_num',
        'snapshot_total_num': 'snapshot_total_num'
    }

    def __init__(self, dp_snapshot_num=None, manual_snapshot_num=None, path_dp_snapshot_num=None, path_manual_num=None, path_total_num=None, snapshot_total_num=None):  # noqa: E501
        """DfsSnapshotsOverviewPage - a model defined in Swagger"""  # noqa: E501

        self._dp_snapshot_num = None
        self._manual_snapshot_num = None
        self._path_dp_snapshot_num = None
        self._path_manual_num = None
        self._path_total_num = None
        self._snapshot_total_num = None
        self.discriminator = None

        if dp_snapshot_num is not None:
            self.dp_snapshot_num = dp_snapshot_num
        if manual_snapshot_num is not None:
            self.manual_snapshot_num = manual_snapshot_num
        if path_dp_snapshot_num is not None:
            self.path_dp_snapshot_num = path_dp_snapshot_num
        if path_manual_num is not None:
            self.path_manual_num = path_manual_num
        if path_total_num is not None:
            self.path_total_num = path_total_num
        if snapshot_total_num is not None:
            self.snapshot_total_num = snapshot_total_num

    @property
    def dp_snapshot_num(self):
        """Gets the dp_snapshot_num of this DfsSnapshotsOverviewPage.  # noqa: E501


        :return: The dp_snapshot_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :rtype: int
        """
        return self._dp_snapshot_num

    @dp_snapshot_num.setter
    def dp_snapshot_num(self, dp_snapshot_num):
        """Sets the dp_snapshot_num of this DfsSnapshotsOverviewPage.


        :param dp_snapshot_num: The dp_snapshot_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :type: int
        """

        self._dp_snapshot_num = dp_snapshot_num

    @property
    def manual_snapshot_num(self):
        """Gets the manual_snapshot_num of this DfsSnapshotsOverviewPage.  # noqa: E501


        :return: The manual_snapshot_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :rtype: int
        """
        return self._manual_snapshot_num

    @manual_snapshot_num.setter
    def manual_snapshot_num(self, manual_snapshot_num):
        """Sets the manual_snapshot_num of this DfsSnapshotsOverviewPage.


        :param manual_snapshot_num: The manual_snapshot_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :type: int
        """

        self._manual_snapshot_num = manual_snapshot_num

    @property
    def path_dp_snapshot_num(self):
        """Gets the path_dp_snapshot_num of this DfsSnapshotsOverviewPage.  # noqa: E501


        :return: The path_dp_snapshot_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :rtype: int
        """
        return self._path_dp_snapshot_num

    @path_dp_snapshot_num.setter
    def path_dp_snapshot_num(self, path_dp_snapshot_num):
        """Sets the path_dp_snapshot_num of this DfsSnapshotsOverviewPage.


        :param path_dp_snapshot_num: The path_dp_snapshot_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :type: int
        """

        self._path_dp_snapshot_num = path_dp_snapshot_num

    @property
    def path_manual_num(self):
        """Gets the path_manual_num of this DfsSnapshotsOverviewPage.  # noqa: E501


        :return: The path_manual_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :rtype: int
        """
        return self._path_manual_num

    @path_manual_num.setter
    def path_manual_num(self, path_manual_num):
        """Sets the path_manual_num of this DfsSnapshotsOverviewPage.


        :param path_manual_num: The path_manual_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :type: int
        """

        self._path_manual_num = path_manual_num

    @property
    def path_total_num(self):
        """Gets the path_total_num of this DfsSnapshotsOverviewPage.  # noqa: E501


        :return: The path_total_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :rtype: int
        """
        return self._path_total_num

    @path_total_num.setter
    def path_total_num(self, path_total_num):
        """Sets the path_total_num of this DfsSnapshotsOverviewPage.


        :param path_total_num: The path_total_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :type: int
        """

        self._path_total_num = path_total_num

    @property
    def snapshot_total_num(self):
        """Gets the snapshot_total_num of this DfsSnapshotsOverviewPage.  # noqa: E501


        :return: The snapshot_total_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :rtype: int
        """
        return self._snapshot_total_num

    @snapshot_total_num.setter
    def snapshot_total_num(self, snapshot_total_num):
        """Sets the snapshot_total_num of this DfsSnapshotsOverviewPage.


        :param snapshot_total_num: The snapshot_total_num of this DfsSnapshotsOverviewPage.  # noqa: E501
        :type: int
        """

        self._snapshot_total_num = snapshot_total_num

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DfsSnapshotsOverviewPage):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
